name: test

on:
  workflow_call:
    inputs:
      working-directory:
        required: true
        type: string
        description: "From which folder this pipeline executes"

jobs:
  build:
    defaults:
      run:
        working-directory: ${{ inputs.working-directory }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version:
          - "3.9"
          - "3.13"
    name: "run test #${{ matrix.python-version }}"
    steps:
      - uses: actions/checkout@v5
        with:
          persist-credentials: false
      - name: Install uv
        uses: astral-sh/setup-uv@4959332f0f014c5280e7eac8b70c90cb574c9f9b # v5
        with:
          enable-cache: true
          python-version: ${{ matrix.python-version }}
          cache-dependency-glob: "${{ inputs.working-directory }}/uv.lock"

      - uses: extractions/setup-just@e33e0265a09d6d736e2ee1e0eb685ef1de4669ff # v3

      - name: Install dependencies
        shell: bash
        run: just install

      - name: Start MongoDB
        uses: supercharge/mongodb-github-action@90004df786821b6308fb02299e5835d0dae05d0d # 1.12.0

      - name: Run unit tests
        shell: bash
        run: just unit_tests

      - name: Start local Atlas
        working-directory: .
        run: bash scripts/start_local_atlas.sh

      - name: Install Ollama
        run: curl -fsSL https://ollama.com/install.sh | sh

      - name: Run Ollama
        working-directory: .
        run: |
          ollama serve &
          sleep 5    # wait for the Ollama server to be ready
          bash scripts/setup_ollama.sh

      - name: Run integration tests
        run: just integration_tests

      - name: Ensure the tests did not create any additional files
        shell: bash
        run: |
          set -eu

          STATUS="$(git status)"
          echo "$STATUS"

          # grep will exit non-zero if the target message isn't found,
          # and `set -e` above will cause the step to fail.
          echo "$STATUS" | grep 'nothing to commit, working tree clean'

      - name: Run unit tests with minimum dependency versions
        run: |
          uv sync --python=${{ matrix.python-version }} --resolution=lowest-direct
          just unit_tests
